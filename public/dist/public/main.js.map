{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/task/task.component.css","webpack:///./src/app/task/task.component.html","webpack:///./src/app/task/task.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".head{\\n    border: 5px orange solid;\\n    border-radius: 5px;\\n\\n}\\n.main{\\n    border: 5px blue solid;\\n    border-radius: 5px;\\n    margin: 10px;\\n}\\n.foot{\\n    border: 5px green solid;\\n    border-radius: 5px;\\n    margin: 10px;\\n}\\n.foot2{\\n    border: 5px red solid;\\n    border-radius: 5px;\\n    margin: 10px;\\n}\\n.B1{\\n    color: white;\\n    background-color: purple;\\n    font-size: 30px;\\n    border-radius: 5px;\\n    margin: 10px;\\n}\\n.B2{\\n    color: white;\\n    background-color: teal;\\n    font-size: 30px;\\n    border-radius: 75px;\\n    margin: 10px;\\n    height: 85px;\\n    margin-left: 100px;\\n}\\n.left{\\n    width: 200px;\\n    display: inline-block;\\n}\\n.right{\\n    width: 600px;\\n    display: inline-block;\\n    background-color: tan;\\n    vertical-align: top;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsbUJBQW1COztDQUV0QjtBQUNEO0lBQ0ksdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixhQUFhO0NBQ2hCO0FBQ0Q7SUFDSSx3QkFBd0I7SUFDeEIsbUJBQW1CO0lBQ25CLGFBQWE7Q0FDaEI7QUFDRDtJQUNJLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsYUFBYTtDQUNoQjtBQUNEO0lBQ0ksYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGFBQWE7Q0FDaEI7QUFDRDtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixhQUFhO0lBQ2IsYUFBYTtJQUNiLG1CQUFtQjtDQUN0QjtBQUNEO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtDQUN6QjtBQUNEO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsb0JBQW9CO0NBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZHtcbiAgICBib3JkZXI6IDVweCBvcmFuZ2Ugc29saWQ7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuXG59XG4ubWFpbntcbiAgICBib3JkZXI6IDVweCBibHVlIHNvbGlkO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBtYXJnaW46IDEwcHg7XG59XG4uZm9vdHtcbiAgICBib3JkZXI6IDVweCBncmVlbiBzb2xpZDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuLmZvb3Qye1xuICAgIGJvcmRlcjogNXB4IHJlZCBzb2xpZDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuLkIxe1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwdXJwbGU7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBtYXJnaW46IDEwcHg7XG59XG4uQjJ7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRlYWw7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDc1cHg7XG4gICAgbWFyZ2luOiAxMHB4O1xuICAgIGhlaWdodDogODVweDtcbiAgICBtYXJnaW4tbGVmdDogMTAwcHg7XG59XG4ubGVmdHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLnJpZ2h0e1xuICAgIHdpZHRoOiA2MDBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdGFuO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG4iXX0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"head\\\" style=\\\"text-align:center\\\">\\n  <h1>\\n    {{ header }}\\n  </h1>\\n  <app-task *ngIf='selectedTask' [taskToShow]='selectedTask'></app-task>\\n  <div class=\\\"left\\\">\\n    <h2>Submit a cake to be rated</h2>\\n    <hr>\\n    <form (submit)=\\\"onSubmit()\\\">\\n      <p>{{ newTask | json }}</p>\\n      <input type=\\\"text\\\" placeholder=\\\"name\\\" name=\\\"newCake.name\\\" [(ngModel)]=\\\"newCake.name\\\">\\n      <input type=\\\"text\\\" placeholder=\\\"img url\\\" name=\\\"newCake.url\\\" [(ngModel)]=\\\"newCake.url\\\">\\n      <input type=\\\"submit\\\" value=\\\"Create Cake\\\">\\n    </form>\\n  </div>\\n  <!-- <div class=\\\"main\\\"> -->\\n    <!-- <button class=\\\"B1\\\" (click)=\\\"onButtonClick()\\\">GET ALL TASKS</button> -->\\n    <div *ngFor=\\\"let cake of cakes; let i = index\\\" class=\\\"right\\\">\\n        <!-- <p >{{ cake.name }} <span><button (click)=\\\"cakeToShow(cake)\\\">Show</button><button (click)=\\\"onButtonClickParams(cake._id, cake.name, cake.url)\\\">Edit</button><button (click)=\\\"onButtonClickDelete(cake._id)\\\">Delete</button></span> </p> -->\\n        <img (click)=\\\"cakeToShow(cake)\\\" src=\\\"{{ cakes[i].url }}\\\" alt=\\\"img\\\">\\n        <form (submit)=\\\"onSubmitReview(cakes[i]._id)\\\">\\n          <select name=\\\"newReview.stars\\\" [(ngModel)]=\\\"newReview.stars\\\">\\n            <option value=\\\"5\\\">5 stars</option>\\n            <option value=\\\"4\\\">4 stars</option>\\n            <option value=\\\"3\\\">3 stars</option>\\n            <option value=\\\"2\\\">2 stars</option>\\n            <option value=\\\"1\\\">1 stars</option>\\n          </select>\\n\\n          <input type=\\\"text\\\" placeholder=\\\"comment\\\" name=\\\"newReview.comment\\\" [(ngModel)]=\\\"newReview.comment\\\">\\n          <input type=\\\"submit\\\">\\n        </form>\\n    </div>\\n    <app-task *ngIf=\\\"show2\\\"></app-task>\\n\\n    \\n  <!-- </div> -->\\n\\n  <!-- <div class=\\\"foot2\\\" *ngIf=\\\"show2\\\">\\n    <p>{{currentTask.title}}</p>\\n    <p>{{currentTask.description}}</p>\\n  </div> -->\\n  <div class=\\\"foot\\\" *ngIf=\\\"show\\\">\\n    <form (submit)=\\\"onSubmitEdit()\\\">\\n      <p>{{ newTask | json }}</p>\\n      <input type=\\\"text\\\"  name=\\\"task.title\\\" [(ngModel)]=\\\"currentTask.title\\\" >\\n      <input type=\\\"text\\\"  name=\\\"task.description\\\" [(ngModel)]=\\\"currentTask.description\\\" >\\n      <input type=\\\"submit\\\" value=\\\"Edit Task\\\">\\n    </form>\\n    <!-- <p>{{ showTitle }}</p>\\n    <p>{{ showDescription }}</p> -->\\n  </div>\\n  <!-- <button (click)=\\\"do(event)\\\">click</button> -->\\n  <!-- <button (click)=\\\"onButtonClick()\\\" >Click me!</button> -->\\n<!-- <button (click)=\\\"onButtonClickParam(5)\\\">Click me!</button> -->\\n<!-- <button (click)=\\\"onButtonClickParams(5, 'hello')\\\">Click me!</button> -->\\n<!-- <button (click)=\\\"onButtonClickEvent($event)\\\">Click me!</button> -->\\n\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { $ } from 'protractor';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n// Implement OnInit.\nexport class AppComponent implements OnInit {\n    newCake: any;\n    cake: any;\n\n    cakes = [];\n    showAll : boolean = false;\n    show : boolean = false;\n    show2 : boolean = false;\n    newReview: any;\n    currentID: any;\n\n    currentCake;\n    showDescription: string;\n    constructor(private _httpService: HttpService){}\n    // ngOnInit will run when the component is initialized, after the constructor method.\n    ngOnInit(){\n      this.getCakesFromService();\n      this.newCake = { name: \"\", url: \"\" }\n      this.newReview = {stars: \"\", comment: \"\"}\n\n    }\n    onSubmit(){\n      this.cakes.push(this.newCake)\n      let observable = this._httpService.addCake(this.newCake);\n      observable.subscribe(data => {\n        console.log(\"Got the data from post back\", data);\n        this.newCake = { name: \"\", url: \"\" }\n      })\n      // Code to send off the form data (this.newTask) to the Service\n      // ...\n      // Reset this.newTask to a new, clean object.\n    }\n    onSubmitEdit(){\n      // this.tasks\n      let observable = this._httpService.editCake(this.currentCake);\n      observable.subscribe(data => {\n        console.log(\"Got the data from post back\", data);\n        this.currentCake = { name: \"\", url: \"\" }\n      })\n      // Code to send off the form data (this.newTask) to the Service\n      // ...\n      // Reset this.newTask to a new, clean object.\n    }\n    // getTasksFromService(){\n    //   this._httpService.getTasks();\n    // }\n    getCakesFromService(){\n      let observable = this._httpService.getCakes();\n      observable.subscribe(data => {\n          console.log(\"Got our tasks 4444!\", data)\n          // In this example, the array of tasks is assigned to the key 'tasks' in the data object. \n          // This may be different for you, depending on how you set up your Task API.\n          this.cakes = data['data'];\n          var cakes = this.cakes;\n          console.log(\"cakes BIIIICh:\", cakes)\n       });\n      }\n    header = 'Rate my cakes'\n    onButtonClick() { \n      console.log(\"clicked fuck\")\n      if (this.showAll) {\n        this.showAll = false;\n      } else {\n        this.showAll = true\n      }\n  }\n  cakeToShow(cake: any){\n    console.log(`Click event is working and i got the cake:`, cake);\n\n    this.show2 = true;\n    \n    this.currentCake = cake\n    this.currentID = cake.id\n    // this.currentTask = {title : title, description : description}\n    // this.showDescription = description\n  }\n  onButtonClickParams(id : string, title: string, description: string){ \n      console.log(`Click event is working and i got the tit: ${title}`);\n      console.log(\"the id for task is: \", id);\n      this.show = true;\n\n      this.currentCake= {title : title, description : description, id : id}\n      // this.showDescription = description\n  }\n  onButtonClickDelete(id: string){\n    console.log(\"the id for cake is: \", id);\n\n    let observable = this._httpService.deleteCake(id);\n      observable.subscribe(data => {\n        console.log(\"Got the data from post back\", data);\n        this.currentCake = { title: \"\", description: \"\" }\n      })\n      this.getCakesFromService();\n  }\n  onSubmitReview(id){\n    this.currentID = id\n    // this.newReview = review\n    console.log(\"review:\",this.newReview)\n\n    // this.resturants.push(this.newResturant)\n    // console.log(this.resturants)\n    let observable = this._httpService.addReview(this.currentID, this.newReview);\n    // console.log(\"got here ***************\")\n    observable.subscribe(data => {\n      console.log(\"Got the data from post back\", data);\n\n    })\n  }\n  // onButtonClickParams(num: Number, str: String): void { \n  //     console.log(`Click event is working with num param: ${num} and str param: ${str}`);\n  // }\n  // onButtonClickEvent(event: any): void { \n  //     console.log(`Click event is working with event: ${event}`);\n  // }\n  \n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n// import { importType } from '@angular/compiler/src/output/output_ast';\nimport { HttpService } from './http.service';\nimport { FormsModule } from '@angular/forms';\nimport { TaskComponent } from './task/task.component';\n \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule, \n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient){\n    this.getCakes();\n  }\n  getCakes(){\n    // Remove the lines of code where we make the variable 'tempObservable' and subscribe to it.copy\n    let tempObservable = this._http.get('/tasks');\n    tempObservable.subscribe(data => console.log(\"Got our cakes!\", data));\n    // Return the observable to wherever the getTasks method was invoked.\n    return this._http.get('/tasks');\n  }\n  postToServer(num){\n      // use the .post() method of HttpClient\n      // num must be an object\n      // provide the url of your post route - make sure this is set up in your server!\n      return this._http.post('/tasks', num);  \n  }\n  addCake(newtask){\n    return this._http.post('/task', newtask)\n  }\n  editCake(task){\n    return this._http.put('/updateTask', task)\n  }\n  deleteCake(id){\n    console.log(\"see this id\", id);\n    return this._http.delete('/delete/'+ id);\n  }\n  addReview(id , review){\n    console.log(\"see this id\", id, \"review:\", review);\n    return this._http.post('/addReview/' + id, review)\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svdGFzay5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- <div class=\\\"foot2\\\" *ngIf=\\\"show2\\\"> -->\\n  \\n\\n<!-- </div> -->\\nhello\\n\\n    <!-- <h6>{{ cake | json }}</h6> -->\\n    <!-- <p>{{cakeToShow}}</p> -->\\n\\n<h3>Baked by {{ cake.name }}</h3>\\n<img src=\\\"{{ cake.url }}\\\" alt=\\\"img\\\">\\n<p>Average rating:</p>\\n\\n<hr>\\n<div *ngFor=\\\"let review of reviews\\\">\\n    <p>{{ review.comment }}</p>\\n    <p>{{ review.stars }} stars</p>\\n    <hr>\\n    \\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AppComponent } from \"../app.component\";\nimport { totalmem } from 'os';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\n\nexport class TaskComponent implements OnInit {\n  reviews: any;\n  cake: any;\n  total: any;\n  avg: any\n\n  @Input() taskToShow: any;\n\n  constructor(private _comp : AppComponent) { \n    \n  }\n  \n  ngOnInit() {\n  //     task = this._comp.currentTask\n  //     console.log(\"task from t.comp.ts *****:\", task)\n    if(this._comp.currentCake){\n      this.cake = this._comp.currentCake\n      console.log(\"cake:\",this.cake)\n      this.reviews = this.cake.Reviews\n      console.log(\"reviews:\", this.reviews, this.reviews.length)\n      // if(this.reviews.length > 0){ \n      //   for(var i = 0; i < this.reviews.length; i++){\n      //     console.log(\"stars:\",this.reviews[i].stars)\n      //       this.total = this.total + this.reviews[i].stars\n      //       console.log(\"+++++++++++++++++++++++++++++++++++=\",this.total)\n\n      //   }\n        this.avg = this.total / this.reviews.length\n      }\n    }\n\n  }\n\n  // onButtonShow(){\n  //   // console.log(`Click event is working and i got the tit:`, title);\n\n  //   // this.show2 = true;\n\n  //   // this.currentTask = {title : title, description : description}\n  //   // // this.showDescription = description\n  //   cake = this._comp.currentCake\n  //     console.log(\" 22222task from t.comp.ts *****:\", cake)\n\n  // }\n// }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}